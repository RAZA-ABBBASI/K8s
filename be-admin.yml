---
apiVersion: v1
kind: Service
metadata:
  name: be-admin
  namespace: vlogmakelaars-prod
spec:
  selector:
    app: be-admin
    tier: backend
    version: v1
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 5000
---

---
apiVersion: v1
kind: Secret
metadata:
  name: be-admin
  namespace: vlogmakelaars-prod
  labels:
    app: be-admin
    tier: backend
    version: v1

type: Opaque
data:
   mongo.password: " "
   mongo.user: " "
   keycloak.client_secret: " "
---

---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: be-admin
    tier: backend
    version: v1

  name: be-admin # image name you can use it with tag for example be-admin:latest
  namespace: vlogmakelaars-prod
---


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: be-admin
  namespace: vlogmakelaars-prod
  labels:
    app: be-admin
    tier: backend
    version: v1
data:
  mongo.host: mongo.vlogmakelaars-prod.svc
  mongo.port: '27017'
  mongo.db: vlogDB
  keycloak.host: https://keycloak.vlogmakelaars-prod.svc:8443
  keycloak.client_id: vlog-client
  keycloak.realm: vlog-realm
---

---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: be-admin
  namespace: vlogmakelaars-prod
  labels:
    app: be-admin
    tier: backend
    version: v1
spec:
  source:
    type: Git
    git:
      uri: 'git@bitbucket.org:it22bv/vlog-be-admin.git'
      ref: master
    contextDir: /
    sourceSecret:
      name: ssh-key # using ssh key secret with name pull-secret
  output:
    to:
      kind: ImageStreamTag
      name: 'be-admin:latest' # ImageStream where build will park the output image
  strategy:
    type: Docker
    dockerStrategy:
      dockerfilePath: Dockerfile
  triggers:
    - type: ImageChange
      imageChange: {}
    - type: ConfigChange
---

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: be-admin
  labels:
    app: be-admin
    tier: backend
    version: v1
  annotations:
    image.openshift.io/triggers: |-
      [{"from":{"kind":"ImageStreamTag","name":"be-admin:latest","namespace":"vlogmakelaars-prod"},"fieldPath":"spec.template.spec.containers[?(@.name==\"be-admin\")].image","pause":"false"}]
  namespace: vlogmakelaars-prod
spec:
  selector:
    matchLabels:
      app: be-admin
      tier: backend
      version: v1

  replicas: 1
  template:
    metadata:
      name: be-admin
      #annotations:
        #sidecar.istio.io/inject: "true" # Enabling service mesh data plane envoy/sidecar
      labels:
        app: be-admin
        tier: backend
        version: v1
    spec:
      containers:
        - name: be-admin
          image: 'image-registry.openshift-image-registry.svc:5000/vlogmakelaars-prod/be-admin:latest'
          ports:
            - containerPort: 5000
          imagePullPolicy: Always
          command: ["node", "dist/main"]
          env:
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: be-admin
                  key: mongo.user

            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: be-admin
                  key: mongo.password

            - name: MONGO_HOST
              valueFrom:
                configMapKeyRef:
                  name: be-admin
                  key:  mongo.host

            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  name: be-admin
                  key: mongo.port

            - name: MONGO_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: be-admin
                  key: mongo.db

            - name: KEYCLOAK_HOST
              valueFrom:
                configMapKeyRef:
                  name: be-admin
                  key: keycloak.host

            - name: KEYCLOAK_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: be-admin
                  key: keycloak.client_id

            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: be-admin
                  key: keycloak.client_secret

            - name: KEYCLOAK_REALM
              valueFrom:
                configMapKeyRef:
                  name: be-admin
                  key: keycloak.realm
  #strategy:
    #type: RollingUpdate
    #rollingUpdate:
      #maxUnavailable: 25%
      #maxSurge: 25%
---


